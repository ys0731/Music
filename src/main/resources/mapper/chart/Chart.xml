<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org//dtd/mybatis-3-mapper.dtd">
<mapper namespace="chart">
	
	
	<!-- 시간별 순위 차트 출력 sql -->
	<select id="ChartList_24hits" parameterType="music.chart.ChartVo" resultType="music.chart.ChartVo">
	    SELECT a.song_no as no, a.rank1 as rank1, a.cnt as playcount, b.rank2 as rank2, (b.rank2-a.rank1) AS ranknum, s.title as title, 
		      s.lyrics as lyrics, ar.artist as artist, al.album as album, al.img_org AS org, al.img_real AS rel,
		        ar.no as ar_no, al.no as al_no		        
		FROM (
		   SELECT
		      @ORD_NUM1 := @ORD_NUM1 + 1 as rank1,
		      p1.cnt, p1.song_no
		   FROM (
		      SELECT COUNT(*) AS cnt, song_no FROM play
		      GROUP BY song_no
		      ORDER BY cnt DESC
		   ) as p1
		) AS a JOIN (
		   SELECT
		      @ORD_NUM2 := @ORD_NUM2 + 1 as rank2,
		      p1.cnt, p1.song_no
		   FROM (
		      SELECT COUNT(*) AS cnt, song_no FROM play
		      WHERE TIMESTAMPDIFF(hour,play.clickdate,NOW()) >= 1
		      GROUP BY song_no
		      ORDER BY cnt DESC
		   ) as p1
		) AS b
		ON a.song_no = b.song_no
		JOIN song s ON a.song_no = s.no
		JOIN artist ar ON s.artist_no = ar.no
		JOIN album al ON s.album_no = al.no
		ORDER BY rank1 ASC
	</select>
	
	<select id="ChartList_daily" parameterType="music.chart.ChartVo" resultType="music.chart.ChartVo">
		<!-- SELECT  thisweek.no, thisweek.playcount, thisweek.title, 
		thisweek.lyrics,  thisweek.artist, thisweek.album, 
		thisweek.org, thisweek.rel 
        , if(prevweek.rowplace is null,999,(ifnull(prevweek.rowplace,0)-ifnull(thisweek.rowplace,0))) AS rank_ch,thisweek.al_no,thisweek.ar_no,
        <if test="user_no != 0">
        (SELECT COUNT(*) FROM mlike WHERE song_no = thisweek.no AND user_no=#{user_no}) AS mlike_cnt 
        </if>
         <if test="user_no == 0">
        0 AS mlike_cnt 
        </if>
        FROM                                                                                                            
	        (                                                                                                                 
	          SELECT row_number() over(ORDER BY COUNT(*) DESC) AS rowplace 
	          ,p.song_no AS no, count(*) as playcount, s.title AS title
	          ,s.lyrics AS lyrics,  ar.artist AS artist, al.album AS album, 
			  al.img_org AS org, al.img_real AS rel, al.no AS al_no,ar.no AS ar_no                              
	       	  FROM play p		                        
	          INNER JOIN song s ON p.song_no = s.no
			  INNER JOIN artist ar ON s.artist_no = ar.no
			  INNER JOIN album al ON s.album_no = al.no                                 
	          WHERE TIMESTAMPDIFF(DAY,p.clickdate,NOW())>=0 AND TIMESTAMPDIFF(DAY,p.clickdate,NOW())&lt;=1  
	          GROUP BY p.song_no   
		      LIMIT 0,100  
	         ) AS thisweek  
        LEFT OUTER JOIN  
	       (        
	     	SELECT row_number() OVER(order by COUNT(*) DESC) AS rowplace 
	        ,p.song_no AS no2, COUNT(*) as playcount2, s.title AS title2
	        ,s.lyrics as lyrics2,  ar.artist AS artist2, al.album AS album2
	        ,al.img_org AS org2, al.img_real AS rel2, al.no AS al_no2,ar.no AS ar_no2                                     
	        FROM play p
		    INNER JOIN song s ON p.song_no = s.no
		    INNER JOIN artist ar ON s.artist_no = ar.no
		    INNER JOIN album al ON s.album_no = al.no		                                                            
	        WHERE TIMESTAMPDIFF(DAY,p.clickdate,NOW())>=2 AND TIMESTAMPDIFF(DAY,p.clickdate,NOW())&lt;=3  
	        GROUP BY p.song_no   
		    LIMIT 0,100        
           ) AS prevweek     
  		ON thisweek.no = prevweek.no2 -->  
	</select>
	
	<select id="ChartList_weekly" parameterType="music.chart.ChartVo" resultType="music.chart.ChartVo">
		<!-- SELECT  thisweek.no, thisweek.playcount, thisweek.title, 
		thisweek.lyrics,  thisweek.artist, thisweek.album, 
		thisweek.org, thisweek.rel 
        , if(prevweek.rowplace is null,999,(ifnull(prevweek.rowplace,0)-ifnull(thisweek.rowplace,0))) AS rank_ch ,thisweek.al_no,thisweek.ar_no,
        <if test="user_no != 0">
        (SELECT COUNT(*) FROM mlike WHERE song_no = thisweek.no AND user_no=#{user_no}) AS mlike_cnt 
        </if>
         <if test="user_no == 0">
        0 AS mlike_cnt 
        </if>
        FROM                                                                                                            
	        (                                                                                                                 
	          SELECT row_number() over(ORDER BY COUNT(*) DESC) AS rowplace 
	          ,p.song_no AS no, count(*) as playcount, s.title AS title
	          ,s.lyrics AS lyrics,  ar.artist AS artist, al.album AS album, 
			  al.img_org AS org, al.img_real AS rel , al.no AS al_no,ar.no AS ar_no                             
	       	  FROM play p		                        
	          INNER JOIN song s ON p.song_no = s.no
			  INNER JOIN artist ar ON s.artist_no = ar.no
			  INNER JOIN album al ON s.album_no = al.no                                 
	          WHERE TIMESTAMPDIFF(DAY,p.clickdate,NOW())>=0 AND TIMESTAMPDIFF(DAY,p.clickdate,NOW())&lt;=7  
	          GROUP BY p.song_no   
		      LIMIT 0,100  
	         ) AS thisweek  
        LEFT OUTER JOIN  
	       (        
	     	SELECT row_number() OVER(order by COUNT(*) DESC) AS rowplace 
	        ,p.song_no AS no2, COUNT(*) as playcount2, s.title AS title2
	        ,s.lyrics as lyrics2,  ar.artist AS artist2, al.album AS album2
	        ,al.img_org AS org2, al.img_real AS rel2, al.no AS al_no2,ar.no AS ar_no2                                     
	        FROM play p
		    INNER JOIN song s ON p.song_no = s.no
		    INNER JOIN artist ar ON s.artist_no = ar.no
		    INNER JOIN album al ON s.album_no = al.no		                                                            
	        WHERE TIMESTAMPDIFF(DAY,p.clickdate,NOW())>=8 AND TIMESTAMPDIFF(DAY,p.clickdate,NOW())&lt;=15  
	        GROUP BY p.song_no   
		    LIMIT 0,100        
           ) AS prevweek     
  		ON thisweek.no = prevweek.no2 -->  
	</select>
	
	
	<!-- 장르 | class:4 |jazz:3 |kpop:1 |POP:2 |-->
	<!-- 클래식 장르 -->
	<select id="Chart_classic" resultType="music.chart.ChartVo" parameterType="music.chart.ChartVo">
		SELECT s.title, s.lyrics, ar.artist, al.album, al.img_org AS org, al.img_real AS rel,s.no AS no, al.no AS al_no,ar.no AS ar_no,
		<if test="user_no != 0">
        (SELECT COUNT(*) FROM mlike WHERE song_no = s.no AND user_no=#{user_no}) AS mlike_cnt 
        </if>
         <if test="user_no == 0">
        0 AS mlike_cnt 
        </if>
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		AND s.genre=4
		LIMIT 0,100
	</select>
	
	<!-- 재즈 장르 -->
	<select id="Chart_jazz" resultType="music.chart.ChartVo" parameterType="music.chart.ChartVo">
		SELECT s.title, s.lyrics, ar.artist, al.album, al.img_org AS org, al.img_real AS rel,s.no AS no, al.no AS al_no,ar.no AS ar_no,
		<if test="user_no != 0">
        (SELECT COUNT(*) FROM mlike WHERE song_no = s.no AND user_no=#{user_no}) AS mlike_cnt 
        </if>
         <if test="user_no == 0">
        0 AS mlike_cnt 
        </if>
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		AND s.genre=3
		LIMIT 0,100
	</select>
	
	<!-- kpop장르 -->
	<select id="Chart_kpop" resultType="music.chart.ChartVo" parameterType="music.chart.ChartVo">
		SELECT s.title, s.lyrics, ar.artist, al.album,al.img_org AS org, al.img_real AS rel,s.no AS no, al.no AS al_no,ar.no AS ar_no,
		<if test="user_no != 0">
        (SELECT COUNT(*) FROM mlike WHERE song_no = s.no AND user_no=#{user_no}) AS mlike_cnt 
        </if>
         <if test="user_no == 0">
        0 AS mlike_cnt 
        </if>
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		AND s.genre=1
		LIMIT 0,100
	</select>
	
	<!-- pop 장르 -->
	<select id="Chart_pop" resultType="music.chart.ChartVo" parameterType="music.chart.ChartVo">
		SELECT s.title, s.lyrics, ar.artist, al.album, al.img_org AS org, al.img_real AS rel,s.no AS no, al.no AS al_no,ar.no AS ar_no,
		<if test="user_no != 0">
        (SELECT COUNT(*) FROM mlike WHERE song_no = s.no AND user_no=#{user_no}) AS mlike_cnt 
        </if>
         <if test="user_no == 0">
        0 AS mlike_cnt 
        </if>
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		AND s.genre=2
		LIMIT 0,100
	</select>
	
	<!-- 최신 차트 -->
	<select id="Chart_recent" resultType="music.chart.ChartVo" parameterType="music.chart.ChartVo">
		SELECT s.title, s.lyrics, ar.artist, al.album, al.img_org AS org, al.img_real AS rel,s.no AS no, al.no AS al_no,ar.no AS ar_no,
		<if test="user_no != 0">
        (SELECT COUNT(*) FROM mlike WHERE song_no = s.no AND user_no=#{user_no}) AS mlike_cnt 
        </if>
         <if test="user_no == 0">
        0 AS mlike_cnt 
        </if>
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		ORDER BY s.regdate desc
		LIMIT 0,100
	</select>
	
	<!-- 최근 감상곡 -->
	<select id="User_recent" resultType="music.chart.ChartVo" parameterType="int">
		SELECT s.title, s.lyrics, ar.artist, al.album,s.no,al.no AS al_no,ar.no AS ar_no
		
		FROM play p
		JOIN song s ON p.song_no = s.no
		JOIN artist ar ON s.artist_no = ar.no
		JOIN album al ON s.album_no = al.no
		WHERE user_no = #{user_no}
		ORDER BY clickdate AND clickdate>(NOW()-interval 1 WEEK) DESC
		LIMIT ${startIdx},${pageRow}	
	</select>
	
	<!-- 곡 하나 상세 -->
	<select id="detail" resultType="music.chart.ChartVo" parameterType="int">
		SELECT s.title, s.lyrics, ar.artist,al.img_org AS org, al.img_real AS rel,s.no AS no
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		WHERE s.no = #{no}
	</select>
	
	<!-- count -->
	<select id="count" resultType="int" parameterType="music.chart.ChartVo"> 
		SELECT COUNT(*) 
		FROM play 
		WHERE user_no = #{user_no}		
	</select>
	
</mapper>