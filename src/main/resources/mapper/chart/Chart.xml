<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org//dtd/mybatis-3-mapper.dtd">
<mapper namespace="chart">

	<!-- 좋아요 개수 마이페이지에서 출력 -->
	<sql id="mlike_cnt">
		<if test="user_no != 0">
        	(SELECT COUNT(*) FROM mlike WHERE song_no = s.no AND user_no=#{user_no}) AS mlike_cnt 
        </if>
        <if test="user_no == 0">
        	0 AS mlike_cnt 
		</if>  
	</sql>
	
 	<!-- 시간별 순위 차트 출력 sql -->
	<select id="ChartList_24hits" parameterType="music.chart.ChartVo" resultType="music.chart.ChartVo">
	   SET @ORD_NUM1 := 0;
	   SET @ORD_NUM2 := 0;
	    SELECT a.song_no as no, a.rank1 as rank1, a.cnt as playcount, b.rank2 as rank2, (b.rank2-a.rank1) AS rank_ch, s.title as title, 
	         s.lyrics as lyrics, ar.artist as artist, al.album as album, al.img_org AS org, al.img_real AS rel,
	           ar.no as ar_no, al.no as al_no, <include refid="mlike_cnt"/>
	   FROM (
	      SELECT
	         @ORD_NUM1 := @ORD_NUM1 + 1 as rank1,
	         p1.cnt, p1.song_no
	      FROM (
	         SELECT COUNT(*) AS cnt, song_no FROM play
	         GROUP BY song_no
	         ORDER BY cnt DESC
	      ) as p1
	   ) AS a JOIN (
	      SELECT
	         @ORD_NUM2 := @ORD_NUM2 + 1 as rank2,
	         p1.cnt, p1.song_no
	      FROM (
	         SELECT COUNT(*) AS cnt, song_no FROM play
	         WHERE TIMESTAMPDIFF(minute,play.clickdate,NOW()) >= 1
	         GROUP BY song_no
	         ORDER BY cnt DESC
	      ) as p1
	   ) AS b
	   ON a.song_no = b.song_no
	   JOIN song s ON a.song_no = s.no
	   JOIN artist ar ON s.artist_no = ar.no
	   JOIN album al ON s.album_no = al.no
	   ORDER BY rank1 ASC;
	</select>
	
	<!-- <select id="ChartList_24hits" parameterType="music.chart.ChartVo" resultType="music.chart.ChartVo">
      SET @ORD_NUM1 := 0;
      SET @ORD_NUM2 := 0;
       SELECT a.song_no as no, a.rank1 as rank1, a.cnt as playcount, b.rank2 as rank2, (b.rank2-a.rank1) AS rank_ch, s.title as title, 
            s.lyrics as lyrics, ar.artist as artist, al.album as album, al.img_org AS org, al.img_real AS rel,
              ar.no as ar_no, al.no as al_no, <include refid="mlike_cnt"/>
      FROM (
         SELECT
            @ORD_NUM1 := @ORD_NUM1 + 1 as rank1,
            p1.cnt, p1.song_no
         FROM (
            SELECT COUNT(*) AS cnt, song_no FROM play
            WHERE TIMESTAMPDIFF(hour,play.clickdate,NOW()) &lt;= 1
            GROUP BY song_no
            ORDER BY cnt DESC
         ) as p1
      ) AS a JOIN (
         SELECT
            @ORD_NUM2 := @ORD_NUM2 + 1 as rank2,
            p1.cnt, p1.song_no
         FROM (
            SELECT COUNT(*) AS cnt, song_no FROM play
            WHERE TIMESTAMPDIFF(hour,play.clickdate,NOW()) > 1 and TIMESTAMPDIFF(hour,play.clickdate,NOW()) &lt;= 2
            GROUP BY song_no
            ORDER BY cnt DESC
         ) as p1
      ) AS b
      ON a.song_no = b.song_no
      JOIN song s ON a.song_no = s.no
      JOIN artist ar ON s.artist_no = ar.no
      JOIN album al ON s.album_no = al.no
      ORDER BY rank1 ASC
      LIMIT 0,100
  	</select> -->
	
	<!-- <select id="ChartList_daily" parameterType="music.chart.ChartVo" resultType="music.chart.ChartVo">
      SET @ORD_NUM1 := 0;
      SET @ORD_NUM2 := 0;
       SELECT a.song_no as no, a.rank1 as rank1, a.cnt as playcount, b.rank2 as rank2, (b.rank2-a.rank1) AS rank_ch, s.title as title, 
            s.lyrics as lyrics, ar.artist as artist, al.album as album, al.img_org AS org, al.img_real AS rel,
              ar.no as ar_no, al.no as al_no, <include refid="mlike_cnt"/>
      FROM (
         SELECT
            @ORD_NUM1 := @ORD_NUM1 + 1 as rank1,
            p1.cnt, p1.song_no
         FROM (
            SELECT COUNT(*) AS cnt, song_no FROM play
            WHERE TIMESTAMPDIFF(day,play.clickdate,NOW()) &lt;= 1
            GROUP BY song_no
            ORDER BY cnt DESC
         ) as p1
      ) AS a JOIN (
         SELECT
            @ORD_NUM2 := @ORD_NUM2 + 1 as rank2,
            p1.cnt, p1.song_no
         FROM (
            SELECT COUNT(*) AS cnt, song_no FROM play
            WHERE TIMESTAMPDIFF(day,play.clickdate,NOW()) > 1 and TIMESTAMPDIFF(day,play.clickdate,NOW()) &lt;= 2
            GROUP BY song_no
            ORDER BY cnt DESC
         ) as p1
      ) AS b
      ON a.song_no = b.song_no
      JOIN song s ON a.song_no = s.no
      JOIN artist ar ON s.artist_no = ar.no
      JOIN album al ON s.album_no = al.no
      ORDER BY rank1 ASC
      LIMIT 0,100
	</select> -->
		
	<!-- 장르 | class:4 |jazz:3 |kpop:1 |POP:2 |-->
	<!-- 클래식 장르 -->
	<select id="Chart_classic" resultType="music.chart.ChartVo" parameterType="music.chart.ChartVo">
		SELECT s.title, s.lyrics, ar.artist, al.album, al.img_org AS org, al.img_real AS rel,s.no AS no, al.no AS al_no,ar.no AS ar_no, <include refid="mlike_cnt"/> 
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		AND s.genre=4
		LIMIT 0,100
	</select>
	
	<!-- 재즈 장르 -->
	<select id="Chart_jazz" resultType="music.chart.ChartVo" parameterType="music.chart.ChartVo">
		SELECT s.title, s.lyrics, ar.artist, al.album, al.img_org AS org, al.img_real AS rel,s.no AS no, al.no AS al_no,ar.no AS ar_no, <include refid="mlike_cnt"/> 
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		AND s.genre=3
		LIMIT 0,100
	</select>
	
	<!-- kpop장르 -->
	<select id="Chart_kpop" resultType="music.chart.ChartVo" parameterType="music.chart.ChartVo">
		SELECT s.title, s.lyrics, ar.artist, al.album,al.img_org AS org, al.img_real AS rel,s.no AS no, al.no AS al_no,ar.no AS ar_no, <include refid="mlike_cnt"/> 
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		AND s.genre=1
		LIMIT 0,100
	</select>
	
	<!-- pop 장르 -->
	<select id="Chart_pop" resultType="music.chart.ChartVo" parameterType="music.chart.ChartVo">
		SELECT s.title, s.lyrics, ar.artist, al.album, al.img_org AS org, al.img_real AS rel,s.no AS no, al.no AS al_no,ar.no AS ar_no, <include refid="mlike_cnt"/> 
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		AND s.genre=2
		LIMIT 0,100
	</select>
	
	<!-- 최신 차트 -->
	<select id="Chart_recent" resultType="music.chart.ChartVo" parameterType="music.chart.ChartVo">
		SELECT s.title, s.lyrics, ar.artist, al.album, al.img_org AS org, al.img_real AS rel,s.no AS no, al.no AS al_no,ar.no AS ar_no, <include refid="mlike_cnt"/> 
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		ORDER BY s.regdate desc
		LIMIT 0,100
	</select>
	
	<!-- 최근 감상곡 -->
	<select id="User_recent" resultType="music.chart.ChartVo" parameterType="int">
		SELECT s.no,s.title, s.lyrics, ar.artist, al.album,s.no,al.no AS al_no, ar.no AS ar_no ,al.img_real AS rel,MAX(p.clickdate)
		FROM play p
		JOIN song s ON p.song_no = s.no
		JOIN artist ar ON s.artist_no = ar.no
		JOIN album al ON s.album_no = al.no
		WHERE user_no = #{user_no} 
		GROUP BY s.no
		ORDER BY max(p.clickdate) DESC
		LIMIT ${startIdx},${pageRow}	
	</select>
	
	<!-- 곡 하나 상세 -->
	<select id="detail" resultType="music.chart.ChartVo" parameterType="int">
		SELECT s.title, s.lyrics, ar.artist,al.img_org AS org, al.img_real AS rel,s.no AS no
		FROM song AS s 
		JOIN artist AS ar ON ar.no = s.artist_no
		JOIN album AS al ON al.no = s.album_no
		WHERE s.no = #{no}
	</select>
	
	<!-- count -->
	<select id="count" resultType="int" parameterType="music.chart.ChartVo"> 
		SELECT sum(cnt) cnt
		FROM(
		SELECT count(distinct s.no) as cnt
		FROM play p
		JOIN song s ON p.song_no = s.no
		WHERE p.user_no = #{user_no}	
		GROUP BY s.no
		) play
	</select>
	
</mapper>